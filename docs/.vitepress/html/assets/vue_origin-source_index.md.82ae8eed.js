import{_ as a,c as l,e as p,a as s,o,r as e}from"./app.1b85acd6.js";const t="/assets/响应式核心.0b11ea2b.png",c="/assets/runtime-core.4ae8e19b.png",r="/assets/parse原理.842947e0.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"源码结构","slug":"源码结构","link":"#源码结构","children":[]},{"level":2,"title":"reactivity","slug":"reactivity","link":"#reactivity","children":[]},{"level":2,"title":"runtime-core","slug":"runtime-core","link":"#runtime-core","children":[]},{"level":2,"title":"compiler-core","slug":"compiler-core","link":"#compiler-core","children":[]}],"relativePath":"vue/origin-source/index.md"}'),F={name:"vue/origin-source/index.md"},y=s(`<h2 id="源码结构" tabindex="-1">源码结构 <a class="header-anchor" href="#源码结构" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">├── packages</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── compiler-core // 核心编译器（平台无关）</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── compiler-dom // dom 编译器</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── compiler-sfc // vue 单文件编译器</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── compiler-ssr // 服务端渲染编译</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── global.d.ts // typescript 声明文件</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── reactivity // 响应式模块，可以与任何框架配合使用</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── runtime-core // 运行时核心实例相关代码（平台无关）</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── runtime-dom // 运行时 dom 关 api，属性，事件处理</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── runtime-test // 运行时测试相关代码</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── server-renderer // 服务端渲染</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── sfc-playground // 单文件组件在线调试器</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── shared // 内部工具库,不对外暴露 API</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── size-check // 简单应用，用来测试代码体积</span></span>
<span class="line"><span style="color:#A6ACCD;">│ ├── template-explorer // 用于调试编译器输出的开发工具</span></span>
<span class="line"><span style="color:#A6ACCD;">│ └── vue // 面向公众的完整版本, 包含运行时和编译器</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,2),D=s('<h2 id="reactivity" tabindex="-1">reactivity <a class="header-anchor" href="#reactivity" aria-hidden="true">#</a></h2><p>reatcive:</p><p><img src="'+t+'" alt="reactivity"></p><p>ref:</p><p>// todo</p><p>ref:</p><p>// todo</p><h2 id="runtime-core" tabindex="-1">runtime-core <a class="header-anchor" href="#runtime-core" aria-hidden="true">#</a></h2><p>初始化流程:</p><p><img src="'+c+'" alt="runtime-core"></p><p>更新流程:</p><p>// todo</p><h2 id="compiler-core" tabindex="-1">compiler-core <a class="header-anchor" href="#compiler-core" aria-hidden="true">#</a></h2><p>template parse 的原理是有限状态机, 当遇到特定字符就迁移到另一种状态,如下图所示:</p><p><img src="'+r+`" alt="parse原理"></p><p>同时, 我们常用的正则的实现原理也是有限状态机, 我们看下面的代码:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正则结果</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">aaaacccapabcpppp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">有限状态机结果</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testABC</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">aaaacccapabcpppp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">正则结果</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1122ababababababrrr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">有限状态机结果</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testABC</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1122ababababababrrr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">testABC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 每个方法都是一个状态</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当匹配到 &#39;a&#39;, 迁移到下一个状态 waitForB</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 否则回到初始状态 waitForA</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">waitForA</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">char</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForB</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当匹配到 &#39;b&#39;, 迁移到下一个状态 waitForC</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 否则回到初始状态 waitForA</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">waitForB</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">char</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForC</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 当匹配到 &#39;c&#39;, 迁移到下一个状态 end</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 否则回到初始状态 waitForA</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">waitForC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">char</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 结束状态  标识着正确匹配结束</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">end</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">currentState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">waitForA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">currentState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">currentState</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">string</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">currentState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,17);function i(A,C,u,d,m,f){const n=e("Mermaid");return o(),l("div",null,[y,p(n,{id:"mermaid_1a96284e",graph:"flowchart%20LR%0A%20%20%20%20compiler-sfc%5B%22%40vue%2Fcompiler-sfc%22%5D%0A%20%20%20%20compiler-dom%5B%22%40vue%2Fcompiler-dom%22%5D%0A%20%20%20%20compiler-core%5B%22%40vue%2Fcompiler-core%22%5D%0A%20%20%20%20vue%5B%22vue%22%5D%0A%20%20%20%20runtime-dom%5B%22%40vue%2Fruntime-dom%22%5D%0A%20%20%20%20runtime-core%5B%22%40vue%2Fruntime-core%22%5D%0A%20%20%20%20reactivity%5B%22%40vue%2Freactivity%22%5D%0A%20%20%20%20subgraph%20%22Runtime%20Packages%22%0A%20%20%20%20%20%20runtime-dom%20--%3E%20runtime-core%0A%20%20%20%20%20%20runtime-core%20--%3E%20reactivity%0A%20%20%20%20end%0A%20%20%20%20subgraph%20%22Compiler%20Packages%22%0A%20%20%20%20%20%20compiler-sfc%20--%3E%20compiler-core%0A%20%20%20%20%20%20compiler-sfc%20--%3E%20compiler-dom%0A%20%20%20%20%20%20compiler-dom%20--%3E%20compiler-core%0A%20%20%20%20end%0A%20%20%20%20vue%20---%3E%20compiler-dom%0A%20%20%20%20vue%20--%3E%20runtime-dom"}),D])}const v=a(F,[["render",i]]);export{_ as __pageData,v as default};
