import{_ as d,c as t,o as l,b as e,d as n}from"./app.1b85acd6.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"null 和 undefined","slug":"null-和-undefined","link":"#null-和-undefined","children":[]}],"relativePath":"typescript/nullAndUndefined/index.md"}'),i={name:"typescript/nullAndUndefined/index.md"},s=e("h2",{id:"null-和-undefined",tabindex:"-1"},[n("null 和 undefined "),e("a",{class:"header-anchor",href:"#null-和-undefined","aria-hidden":"true"},"#")],-1),o=e("p",null,"默认情况下 null 和 undefined 是所有类型的子类型。 就是说你可以把 null 和 undefined 赋值给其他类型。",-1),u=e("p",null,[n("但是如果你在 tsconfig.json 指定了 "),e("code",null,'"strictNullChecks":true'),n(" ，null 和 undefined 只能赋值给 void 和它们各自的类型。")],-1),a=[s,o,u];function c(r,f,_,p,h,m){return l(),t("div",null,a)}const v=d(i,[["render",c]]);export{k as __pageData,v as default};
