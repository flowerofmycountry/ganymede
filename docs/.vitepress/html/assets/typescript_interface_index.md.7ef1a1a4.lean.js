import{_ as l,c as p,b as s,e as o,w as e,a as n,r as t,o as c,d as r}from"./app.1b85acd6.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"约束","slug":"约束","link":"#约束","children":[]},{"level":2,"title":"可选属性 和 索引签名","slug":"可选属性-和-索引签名","link":"#可选属性-和-索引签名","children":[]},{"level":2,"title":"用接口定义函数的形状","slug":"用接口定义函数的形状","link":"#用接口定义函数的形状","children":[]},{"level":2,"title":"混合接口","slug":"混合接口","link":"#混合接口","children":[]},{"level":2,"title":"鸭式辨型法","slug":"鸭式辨型法","link":"#鸭式辨型法","children":[]},{"level":2,"title":"接口合并","slug":"接口合并","link":"#接口合并","children":[]}],"relativePath":"typescript/interface/index.md"}'),y={name:"typescript/interface/index.md"},D=n("",3),F=n("",21);function C(A,i,d,u,g,b){const a=t("font");return c(),p("div",null,[D,s("p",null,[s("b",null,[o(a,{color:"#26c6da"},{default:e(()=>[r("一旦定义了索引签名，那么其他属性的类型都必须是它的类型的子集。")]),_:1})])]),F])}const f=l(y,[["render",C]]);export{m as __pageData,f as default};
