import{_ as t,c as e,b as n,e as l,w as o,a as p,r as c,o as r,d as s}from"./app.1b85acd6.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"tsconfig.json","slug":"tsconfig-json","link":"#tsconfig-json","children":[]},{"level":2,"title":"声明文件","slug":"声明文件","link":"#声明文件","children":[]}],"relativePath":"typescript/settings/index.md"}'),F={name:"typescript/settings/index.md"},y=p("",6),D=n("code",null,".d.ts",-1),i=n("code",null,"import",-1),u=n("code",null,"export",-1),C=p("",9);function q(d,f,E,A,m,h){const a=c("font");return r(),e("div",null,[y,n("blockquote",null,[n("p",null,[n("b",null,[l(a,{color:"#26c6da"},{default:o(()=>[s("TypeScript 与 ECMAScript 2015 一样，任何包含顶级 import 或者 export 的文件（包括 "),D,s("）都被当成一个模块。相反地，如果一个文件不带有 "),l(a,{color:"red"},{default:o(()=>[s("顶级")]),_:1}),s(" 的 import 或者 export 声明，那么它的内容被视为全局可见的（因此对模块也是可见的）。如果有 "),i,s("、"),u,s(" 语法，又想定义全局类型，这时候就要手动 declare global 。")]),_:1})])])]),C])}const x=t(F,[["render",q]]);export{_ as __pageData,x as default};
